name: Changelog Generator

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to add or update (e.g. 0.1.9)'
        required: true
      date:
        description: 'Release date (YYYY-MM-DD)'
        required: true
        default: '2025-05-21'
      features:
        description: 'Features added, comma separated'
        required: false
      fixes:
        description: 'Fixes added, comma separated'
        required: false
      performance:
        description: 'Performance improvements, comma separated'
        required: false
      docs:
        description: 'Documentation updates, comma separated'
        required: false
      maintenance:
        description: 'Maintenance changes, comma separated'
        required: false

jobs:
  update_changelog:
    name: Update CHANGELOG.md
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Update CHANGELOG.md
        run: |
          VERSION="${{ github.event.inputs.version }}"
          DATE="${{ github.event.inputs.date }}"
          
          # Create temporary file
          touch temp_changelog.md
          
          # Preserve header from existing CHANGELOG.md
          if [ -f CHANGELOG.md ]; then
            head -n 7 CHANGELOG.md > temp_changelog.md
            echo "" >> temp_changelog.md
          else
            # Create new file with standard header
            echo "# Changelog" > temp_changelog.md
            echo "" >> temp_changelog.md
            echo "All notable changes to the Orbit UI Framework will be documented in this file." >> temp_changelog.md
            echo "" >> temp_changelog.md
            echo "The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)," >> temp_changelog.md
            echo "and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html)." >> temp_changelog.md
            echo "" >> temp_changelog.md
          fi
          
          # Add new version entry
          echo "## [$VERSION] - $DATE" >> temp_changelog.md
          echo "" >> temp_changelog.md
          
          # Add features if provided
          if [ -n "${{ github.event.inputs.features }}" ]; then
            echo "### Added" >> temp_changelog.md
            IFS=',' read -ra FEATURES <<< "${{ github.event.inputs.features }}"
            for FEATURE in "${FEATURES[@]}"; do
              echo "- ${FEATURE}" >> temp_changelog.md
            done
            echo "" >> temp_changelog.md
          fi
          
          # Add fixes if provided
          if [ -n "${{ github.event.inputs.fixes }}" ]; then
            echo "### Fixed" >> temp_changelog.md
            IFS=',' read -ra FIXES <<< "${{ github.event.inputs.fixes }}"
            for FIX in "${FIXES[@]}"; do
              echo "- ${FIX}" >> temp_changelog.md
            done
            echo "" >> temp_changelog.md
          fi
          
          # Add performance improvements if provided
          if [ -n "${{ github.event.inputs.performance }}" ]; then
            echo "### Performance" >> temp_changelog.md
            IFS=',' read -ra PERFS <<< "${{ github.event.inputs.performance }}"
            for PERF in "${PERFS[@]}"; do
              echo "- ${PERF}" >> temp_changelog.md
            done
            echo "" >> temp_changelog.md
          fi
          
          # Add documentation updates if provided
          if [ -n "${{ github.event.inputs.docs }}" ]; then
            echo "### Documentation" >> temp_changelog.md
            IFS=',' read -ra DOCS <<< "${{ github.event.inputs.docs }}"
            for DOC in "${DOCS[@]}"; do
              echo "- ${DOC}" >> temp_changelog.md
            done
            echo "" >> temp_changelog.md
          fi
          
          # Add maintenance items if provided
          if [ -n "${{ github.event.inputs.maintenance }}" ]; then
            echo "### Changed" >> temp_changelog.md
            IFS=',' read -ra MAINT <<< "${{ github.event.inputs.maintenance }}"
            for ITEM in "${MAINT[@]}"; do
              echo "- ${ITEM}" >> temp_changelog.md
            done
            echo "" >> temp_changelog.md
          fi
          
          # Preserve existing content (except header)
          if [ -f CHANGELOG.md ]; then
            tail -n +8 CHANGELOG.md | grep -v "^## \[$VERSION\]" | awk -v in_section=0 -v version="$VERSION" '
              /^## \[/ {
                in_section = 0
                print
                next
              }
              $0 ~ "^## \\[" version "\\]" {
                in_section = 1
                next
              }
              in_section == 0 {
                print
              }
            ' >> temp_changelog.md
          else
            # Add Unreleased section if creating new file
            echo "## [Unreleased]" >> temp_changelog.md
            echo "" >> temp_changelog.md
            echo "### Added" >> temp_changelog.md
            echo "- Initial implementation of orbit parser for \`.orbit\` files" >> temp_changelog.md
          fi
          
          # Replace original with our updated version
          mv temp_changelog.md CHANGELOG.md
      
      - name: Commit changes if CHANGELOG.md was modified
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update CHANGELOG.md with version ${{ github.event.inputs.version }}"
            git push
          fi
