name: Orbit Crate CI

# Crate-specific CI for orbit core framework
# Focuses on orbit-specific tests and validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'orbit/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'orbit/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "--cfg ignore_wayland_tests --cfg ignore_lifecycle_tests"

jobs:
  orbit-specific-tests:
    name: Orbit Core Tests
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libfontconfig1-dev libfreetype6-dev

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> target
          cache-on-failure: true

      - name: Run orbit crate tests
        working-directory: orbit
        run: |
          cargo test --all-features
          cargo test --doc

      - name: Test orbit integration with examples
        run: |
          cd examples
          cargo check --all-features
          cargo test --all-features

  orbit-feature-matrix:
    name: Orbit Feature Matrix
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfontconfig1-dev libfreetype6-dev

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> target
          cache-on-failure: true

      - name: Test different feature combinations
        working-directory: orbit
        run: |
          # Test default features
          cargo test

          # Test no default features
          cargo test --no-default-features

          # Test individual features
          cargo test --no-default-features --features="skia"
          cargo test --no-default-features --features="gl"
          cargo test --no-default-features --features="reactive"

          # Test feature combinations
          cargo test --no-default-features --features="skia,gl"
          cargo test --no-default-features --features="skia,reactive"
          cargo test --no-default-features --features="gl,reactive"
