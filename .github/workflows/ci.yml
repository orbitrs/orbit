name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: orbiton
          fetch-depth: 1

      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: orbit
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout orbit-analyzer
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit-analyzer
          path: orbit-analyzer
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Setup workspace
        run: |
          pwd
          ls -la
          
          # Create workspace Cargo.toml
          cat > Cargo.toml << 'EOF'
          [workspace]
          resolver = "2"
          members = [
              "orbit",
              "orbit-analyzer",
              "orbiton"
          ]

          [workspace.package]
          version = "0.1.0"
          edition = "2021"
          authors = ["Orbit Team <orbit@example.com>"]
          license = "MIT OR Apache-2.0"
          repository = "https://github.com/orbitrs/orbit"

          [workspace.dependencies]
          serde = { version = "1.0", features = ["derive"] }
          serde_json = "1.0"
          thiserror = "1.0"
          log = "0.4"
          tokio = { version = "1.34.0", features = ["full"] }
          wasm-bindgen = "0.2.89"
          anyhow = "1.0.75"
          clap = { version = "4.4", features = ["derive"] }
          futures = "0.3.28"
          async-trait = "0.1.74"
          regex = "1.10.2"
          chrono = { version = "0.4.31", features = ["serde"] }
          url = "2.5.0"
          reqwest = { version = "0.11", features = ["json"] }
          EOF

          # Show workspace structure
          find . -name "Cargo.toml" -type f
          
          # Fix module ambiguity if needed
          if [ -f "orbit/src/parser.rs" ] && [ -f "orbit/src/parser/mod.rs" ]; then
            echo "Found both parser.rs and parser/mod.rs. Renaming parser.rs to parser_legacy.rs..."
            mv orbit/src/parser.rs orbit/src/parser_legacy.rs
          fi

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target
            
      - name: Check code formatting
        run: |
          echo "Formatting orbit..."
          cargo fmt -p orbit -- --check
        
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout repositories
        uses: actions/checkout@v4
        with:
          path: orbiton
          fetch-depth: 1

      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: orbit
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout orbit-analyzer
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit-analyzer
          path: orbit-analyzer
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup workspace
        run: |
          cat > Cargo.toml << 'EOF'
          [workspace]
          resolver = "2"
          members = [
              "orbit",
              "orbit-analyzer",
              "orbiton"
          ]

          [workspace.package]
          version = "0.1.0"
          edition = "2021"
          authors = ["Orbit Team <orbit@example.com>"]
          license = "MIT OR Apache-2.0"
          repository = "https://github.com/orbitrs/orbit"

          [workspace.dependencies]
          serde = { version = "1.0", features = ["derive"] }
          serde_json = "1.0"
          thiserror = "1.0"
          log = "0.4"
          tokio = { version = "1.34.0", features = ["full"] }
          wasm-bindgen = "0.2.89"
          anyhow = "1.0.75"
          clap = { version = "4.4", features = ["derive"] }
          futures = "0.3.28"
          async-trait = "0.1.74"
          regex = "1.10.2"
          chrono = { version = "0.4.31", features = ["serde"] }
          url = "2.5.0"
          reqwest = { version = "0.11", features = ["json"] }
          EOF

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Run tests
        run: cargo test --all-features

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout repositories
        uses: actions/checkout@v4
        with:
          path: orbiton
          fetch-depth: 1

      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: orbit
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout orbit-analyzer
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit-analyzer
          path: orbit-analyzer
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup workspace
        run: |
          cat > Cargo.toml << 'EOF'
          [workspace]
          resolver = "2"
          members = [
              "orbit",
              "orbit-analyzer",
              "orbiton"
          ]

          [workspace.package]
          version = "0.1.0"
          edition = "2021"
          authors = ["Orbit Team <orbit@example.com>"]
          license = "MIT OR Apache-2.0"
          repository = "https://github.com/orbitrs/orbit"

          [workspace.dependencies]
          serde = { version = "1.0", features = ["derive"] }
          serde_json = "1.0"
          thiserror = "1.0"
          log = "0.4"
          tokio = { version = "1.34.0", features = ["full"] }
          wasm-bindgen = "0.2.89"
          anyhow = "1.0.75"
          clap = { version = "4.4", features = ["derive"] }
          futures = "0.3.28"
          async-trait = "0.1.74"
          regex = "1.10.2"
          chrono = { version = "0.4.31", features = ["serde"] }
          url = "2.5.0"
          reqwest = { version = "0.11", features = ["json"] }
          EOF

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Build in release mode
        run: cargo build --release
