name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Create workspace directory
        run: mkdir -p workspace

      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: workspace/orbiton
          fetch-depth: 1

      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: workspace/orbit
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout orbit-analyzer
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit-analyzer
          path: workspace/orbit-analyzer
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Setup workspace
        working-directory: workspace
        run: |
          # Verify package names
          # First ensure each package has the correct name in its Cargo.toml
          echo "Verifying package names..."
          
          # Update dependencies to use local paths
          sed -i.bak -E 's#orbit = \{ git = "https://github.com/orbitrs/orbit.git"(, [^}]*)? \}#orbit = { path = "../orbit" }#' orbiton/Cargo.toml
          sed -i.bak -E 's#orbit-analyzer = \{ git = "https://github.com/orbitrs/orbit-analyzer.git"(, [^}]*)? \}#orbit-analyzer = { path = "../orbit-analyzer" }#' orbiton/Cargo.toml
          
          # Verify the package names are correct
          echo "Checking package name in orbit/Cargo.toml..."
          [ "$(grep '^name = "orbit"' orbit/Cargo.toml)" ] || exit 1
          echo "Checking package name in orbiton/Cargo.toml..."
          [ "$(grep '^name = "orbiton"' orbiton/Cargo.toml)" ] || exit 1
          echo "Checking package name in orbit-analyzer/Cargo.toml..."
          [ "$(grep '^name = "orbit-analyzer"' orbit-analyzer/Cargo.toml)" ] || exit 1

          # Create workspace Cargo.toml
          cat > Cargo.toml << 'EOFCARGO'
          [workspace]
          resolver = "2"
          members = [
              "orbit",
              "orbit-analyzer",
              "orbiton"
          ]

          [workspace.package]
          version = "0.1.0"
          edition = "2021"
          authors = ["Orbit Team <orbit@example.com>"]
          license = "MIT OR Apache-2.0"
          repository = "https://github.com/orbitrs/orbit"

          [workspace.dependencies]
          serde = { version = "1.0", features = ["derive"] }
          serde_json = "1.0"
          thiserror = "1.0"
          log = "0.4"
          tokio = { version = "1.34.0", features = ["full"] }
          wasm-bindgen = "0.2.89"
          anyhow = "1.0.75"
          clap = { version = "4.4", features = ["derive"] }
          futures = "0.3.28"
          async-trait = "0.1.74"
          regex = "1.10.2"
          chrono = { version = "0.4.31", features = ["serde"] }
          url = "2.5.0"
          reqwest = { version = "0.11", features = ["json"] }
          EOFCARGO

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            workspace -> target

      - name: Check code formatting
        working-directory: workspace
        run: cargo fmt --all -- --check

      - name: Run clippy
        working-directory: workspace
        run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Create workspace directory
        run: mkdir -p workspace

      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: workspace/orbiton
          fetch-depth: 1

      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: workspace/orbit
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout orbit-analyzer
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit-analyzer
          path: workspace/orbit-analyzer
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup workspace
        working-directory: workspace
        run: |
          # Update dependencies to use local paths
          sed -i.bak 's#orbit = { git = "https://github.com/orbitrs/orbit.git" }#orbit = { path = "../orbit" }#' orbiton/Cargo.toml
          sed -i.bak 's#orbit-analyzer = { git = "https://github.com/orbitrs/orbit-analyzer.git" }#orbit-analyzer = { path = "../orbit-analyzer" }#' orbiton/Cargo.toml

          # Create workspace Cargo.toml
          cat > Cargo.toml << 'EOFCARGO'
          [workspace]
          resolver = "2"
          members = [
              "orbit",
              "orbit-analyzer",
              "orbiton"
          ]

          [workspace.package]
          version = "0.1.0"
          edition = "2021"
          authors = ["Orbit Team <orbit@example.com>"]
          license = "MIT OR Apache-2.0"
          repository = "https://github.com/orbitrs/orbit"

          [workspace.dependencies]
          serde = { version = "1.0", features = ["derive"] }
          serde_json = "1.0"
          thiserror = "1.0"
          log = "0.4"
          tokio = { version = "1.34.0", features = ["full"] }
          wasm-bindgen = "0.2.89"
          anyhow = "1.0.75"
          clap = { version = "4.4", features = ["derive"] }
          futures = "0.3.28"
          async-trait = "0.1.74"
          regex = "1.10.2"
          chrono = { version = "0.4.31", features = ["serde"] }
          url = "2.5.0"
          reqwest = { version = "0.11", features = ["json"] }
          EOFCARGO

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            workspace -> target

      - name: Run tests
        working-directory: workspace
        run: cargo test --all-features

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Create workspace directory
        run: mkdir -p workspace

      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: workspace/orbiton
          fetch-depth: 1

      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: workspace/orbit
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout orbit-analyzer
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit-analyzer
          path: workspace/orbit-analyzer
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup workspace
        working-directory: workspace
        run: |
          # Update dependencies to use local paths
          sed -i.bak 's#orbit = { git = "https://github.com/orbitrs/orbit.git" }#orbit = { path = "../orbit" }#' orbiton/Cargo.toml
          sed -i.bak 's#orbit-analyzer = { git = "https://github.com/orbitrs/orbit-analyzer.git" }#orbit-analyzer = { path = "../orbit-analyzer" }#' orbiton/Cargo.toml

          # Create workspace Cargo.toml
          cat > Cargo.toml << 'EOFCARGO'
          [workspace]
          resolver = "2"
          members = [
              "orbit",
              "orbit-analyzer",
              "orbiton"
          ]

          [workspace.package]
          version = "0.1.0"
          edition = "2021"
          authors = ["Orbit Team <orbit@example.com>"]
          license = "MIT OR Apache-2.0"
          repository = "https://github.com/orbitrs/orbit"

          [workspace.dependencies]
          serde = { version = "1.0", features = ["derive"] }
          serde_json = "1.0"
          thiserror = "1.0"
          log = "0.4"
          tokio = { version = "1.34.0", features = ["full"] }
          wasm-bindgen = "0.2.89"
          anyhow = "1.0.75"
          clap = { version = "4.4", features = ["derive"] }
          futures = "0.3.28"
          async-trait = "0.1.74"
          regex = "1.10.2"
          chrono = { version = "0.4.31", features = ["serde"] }
          url = "2.5.0"
          reqwest = { version = "0.11", features = ["json"] }
          EOFCARGO

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            workspace -> target

      - name: Build release
        working-directory: workspace
        run: cargo build --release
