name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target
            
      - name: Check code formatting
        run: |
          echo "Formatting orbit..."
          # Use --manifest-path to ensure we're using the correct Cargo.toml
          cargo fmt --manifest-path=Cargo.toml --check
        
      - name: Run clippy
        run: |
          echo "Running clippy on orbit..."
          # Use --manifest-path to ensure we're using the correct Cargo.toml
          cargo clippy --manifest-path=Cargo.toml --all-targets --all-features -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Run tests
        run: |
          echo "Running tests for orbit..."
          # Use --manifest-path to ensure we're using the correct Cargo.toml
          cargo test --manifest-path=Cargo.toml --all-features

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Build in release mode
        run: |
          echo "Building orbit in release mode..."
          # Use --manifest-path to ensure we're using the correct Cargo.toml
          cargo build --manifest-path=Cargo.toml --release
